<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_minus.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACgAAAAoCAYAAACM/rhtAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAABlRJREFUWEfVmGtsVEUUxxdjNGp8xJj4BQWh0BYKxAQ0ClHCqyAGNPoB4wdMVFIg
        Jj6AGI0EUQE1ijWmYrFGBB9VoUCRAgXBGHkkvGqh3ZZuW6Tdvra73d3u7t1tO8f/uZ1p795Ot61um3CS
        f3r33jPn/O7cmTMzdVxXVi7E7c6I+MhpiCOVhii+woqK4iqoGqqxqNb2eyjiWByTxfE5D3IWl0fE3nJD
        PCNx+hoe5lYYRJXQFagqSuSCqqEaqFaKr1l8X4n97FLPlL9qr2KodpyH83Fezl8WFo9IpHiriIhSBacS
        WAOrRFYgDn45LOiYp5MONHaYOtrSad7jZ+ol+4ung0RvviqR4q0Sn1cFTBTsCrS/oYPWnA/TgmI/Tdnr
        owyb+F5mcYDWwmcffLlNotg9kBERdUbFVIkUb8eJbqyKiSyXIbZhrOytMUSX/S13uzto6YkAZewDyBD0
        FNoUoK0dEjlKoVzoK1dUZFfExMMSZ2CrNkSegjsfFPTCyXaash+98z+0HDE4lglqCH890a0y3dCMe5Nn
        G8MdxfiacxSfshBJkqC5iMUxqwwRxSdNkSn7N0z35XC+ACAXPq0pvF0rwxU1d9KMQ2005QCCJ1Ec8yBi
        I28Mn9alcvNf/g2mQsyJ8Y6KqJiGOiSsA1cN2jOBLpp1OPlwSo8d8dNpf5f5uXX5qww668AbLOYf1ofs
        7IwQLcHA1n2iZGrpHwEzFzNwXjWz+RpsXkelEHegS+usD9j5MxQk3SAfDnEuNbvje1Fkm2PQFRT31kbE
        K7i5BU5b8Gm3Tj/gC9lr23Bp5sE2KmkXKNSiC5XjGyyjH9RiySOiUSag3TL2eN/MKEDjEdSHZQaKuSiU
        CIlt0m6vc/IeL42kFmFFQg/WVIbEaImht9QC39jJv6JRP9p0MUSBmKCLng7KLGrT+li1ED6l3g4Kog23
        1fkonfR1z2gucVhZ3pZI8TbpJ+/zk/JbSaeH8KadAiNDWkOoixagXOh8WZm/+UwfZdyWY+h8WXmgs5Yc
        1MUHJVavpf/YugEinaYhCPee1UxIlAu7L9+zwrH5o4KmIobdV2njxXDcbEYvPiGxei1tpycnfZeH+tPK
        4wGKxefthsRsVD58bYfjNlloa41l1xun2nu2eoAr+UeIWyRWr6XuaNme9p2HEmm1DrIdkJiN8/cADtdW
        Y9+Vvwe0saxaXOj7sypCK1BqlqA+3yyRHA505wYMTB+Tr/krSGnftgyoVcf8Wki3Bo59dTE06i7MVquN
        iUetK8jmc2FKzWsZlFaiNNghrWb2HHx0bXWamNeyTmL1WnVEZPYuLUS7sPWdmNs8aGVhM6GDNOEO+7Vt
        +tOEbc2LJVav8bfGslKiAC8EBKVug/OXg1cWap0V0oQr8mt9+1VOU+eYrb67JFa8NQhxGw9MaD1vIp9G
        0Uz5omlIehFlxR3spIZgF72Ea53PADomcRIbdhAFuaURSsluHFFN+LzxOYmgNxfRna4YzQJgEx/95u7w
        0PhPG0dEadmNZefaREpFhMZdhZhFYnUbH45QGLvUbOZq/r3ToHEfN4yIfkCP9BRoFp8mDbHdhONeU2uf
        dTYz5MtYER7Y7B5WrcCRlOGsa7DiwBF4pgOnqkwG4of8QPUi3ysLCVqI+jT2ffewaBFicw7r+qvgTIaI
        mO+4RHQTTlCHdA7c8ExrJ83OaaIx79YnVbNzmul0q9xeyXzxHSSK+OhrfmaUrlE47k1zRWgeCwN1Hm+5
        +azCAf72C1q200P3r69LipZhY1CCeqvgsMzmY8FYwHlNhqiYykwmXCID9CeqJzHDaNOJIKVvdNN9b9X9
        J6W/5zZjcCxrz+ELZsiUAxu2OHdXx8Tj6MFnsWGs7xkPZiCi89j1vravjVLX19PoddcGJfZ9HW24rZoQ
        Co7jI88vOLTNcRLdIzH0VmmIJ3EuCNvHhB2SdSkoaPvZEK3K99I81LKMdzC21l4zxdfztzbS6p+99PXZ
        sOmrA7PHxyoWwqRdKHH6mtMQpwYTiJ9ZYblNf1I+qk2imOyHTjotcfoaAI/zfzhVYF1Aa1ArbCIpXzuY
        iqNeklewCjBInL7mjIkZ5YaoG+jfwFdj8UlUIquszxSUkvLnuDa4+vKYmC5x9MbT+3JYjOF10S5eJ5Mh
        XWzOidw3SIzrxRyOfwHneGw44F4s9QAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btn_Restric.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>